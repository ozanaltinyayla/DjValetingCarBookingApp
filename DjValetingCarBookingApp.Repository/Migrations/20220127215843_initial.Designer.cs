// <auto-generated />
using System;
using DjValetingCarBookingApp.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DjValetingCarBookingApp.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220127215843_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DjValetingCarBookingApp.Core.BookingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Flexibility")
                        .HasColumnType("int");

                    b.Property<int>("VehicleSize")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("BookingInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingDate = new DateTime(2022, 1, 28, 0, 58, 42, 604, DateTimeKind.Local).AddTicks(145),
                            CustomerId = 1,
                            Flexibility = 1,
                            VehicleSize = 3
                        },
                        new
                        {
                            Id = 2,
                            BookingDate = new DateTime(2022, 1, 29, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2107),
                            CustomerId = 1,
                            Flexibility = 2,
                            VehicleSize = 2
                        },
                        new
                        {
                            Id = 3,
                            BookingDate = new DateTime(2022, 1, 31, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2214),
                            CustomerId = 1,
                            Flexibility = 3,
                            VehicleSize = 1
                        },
                        new
                        {
                            Id = 4,
                            BookingDate = new DateTime(2022, 2, 1, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2218),
                            CustomerId = 2,
                            Flexibility = 1,
                            VehicleSize = 2
                        },
                        new
                        {
                            Id = 5,
                            BookingDate = new DateTime(2022, 2, 2, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2220),
                            CustomerId = 2,
                            Flexibility = 2,
                            VehicleSize = 1
                        },
                        new
                        {
                            Id = 6,
                            BookingDate = new DateTime(2022, 2, 3, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2221),
                            CustomerId = 2,
                            Flexibility = 3,
                            VehicleSize = 3
                        },
                        new
                        {
                            Id = 7,
                            BookingDate = new DateTime(2022, 1, 31, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2223),
                            CustomerId = 3,
                            Flexibility = 1,
                            VehicleSize = 4
                        },
                        new
                        {
                            Id = 8,
                            BookingDate = new DateTime(2022, 2, 4, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2225),
                            CustomerId = 3,
                            Flexibility = 2,
                            VehicleSize = 3
                        },
                        new
                        {
                            Id = 9,
                            BookingDate = new DateTime(2022, 2, 11, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2226),
                            CustomerId = 3,
                            Flexibility = 3,
                            VehicleSize = 2
                        },
                        new
                        {
                            Id = 10,
                            BookingDate = new DateTime(2022, 2, 8, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2227),
                            CustomerId = 4,
                            Flexibility = 1,
                            VehicleSize = 4
                        },
                        new
                        {
                            Id = 11,
                            BookingDate = new DateTime(2022, 2, 9, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2229),
                            CustomerId = 4,
                            Flexibility = 2,
                            VehicleSize = 1
                        },
                        new
                        {
                            Id = 12,
                            BookingDate = new DateTime(2022, 2, 12, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2231),
                            CustomerId = 4,
                            Flexibility = 3,
                            VehicleSize = 3
                        },
                        new
                        {
                            Id = 13,
                            BookingDate = new DateTime(2022, 2, 18, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2232),
                            CustomerId = 5,
                            Flexibility = 1,
                            VehicleSize = 1
                        },
                        new
                        {
                            Id = 14,
                            BookingDate = new DateTime(2022, 2, 21, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2234),
                            CustomerId = 5,
                            Flexibility = 2,
                            VehicleSize = 2
                        },
                        new
                        {
                            Id = 15,
                            BookingDate = new DateTime(2022, 2, 22, 0, 58, 42, 609, DateTimeKind.Local).AddTicks(2235),
                            CustomerId = 5,
                            Flexibility = 3,
                            VehicleSize = 3
                        });
                });

            modelBuilder.Entity("DjValetingCarBookingApp.Core.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactNumber = "5559998877",
                            Email = "linustorvalds@gmail.com",
                            Name = "Linus Torvalds"
                        },
                        new
                        {
                            Id = 2,
                            ContactNumber = "3337775544",
                            Email = "adalovelace@gmail.com",
                            Name = "Ada Lovelace"
                        },
                        new
                        {
                            Id = 3,
                            ContactNumber = "6668889955",
                            Email = "alanturing@gmail.com",
                            Name = "Alan Turing"
                        },
                        new
                        {
                            Id = 4,
                            ContactNumber = "7779005544",
                            Email = "kenthompson@gmail.com",
                            Name = "Ken Thompson"
                        },
                        new
                        {
                            Id = 5,
                            ContactNumber = "1116667799",
                            Email = "dennisritchie@gmail.com",
                            Name = "Dennis Ritchie"
                        });
                });

            modelBuilder.Entity("DjValetingCarBookingApp.Core.BookingInfo", b =>
                {
                    b.HasOne("DjValetingCarBookingApp.Core.Customer", "Customer")
                        .WithMany("BookingInfos")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DjValetingCarBookingApp.Core.Customer", b =>
                {
                    b.Navigation("BookingInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
